1. Merge Two Sorted Lists
You are given the heads of two sorted linked lists list1 and list2.
Merge the two lists in a one sorted list. The list should be made by splicing together the 
nodes of the first two lists.
Return the head of the merged linked list.
Example 1:
Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]
PROGRAM:
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
list1 = ListNode(1, ListNode(2, ListNode(4)))
list2 = ListNode(1, ListNode(3, ListNode(4)))
dummy = ListNode()
current = dummy
p1, p2 = list1, list2
while p1 and p2:
    if p1.val <= p2.val:
        current.next = p1
        p1 = p1.next
    else:
        current.next = p2
        p2 = p2.next
    current = current.next
if p1:
    current.next = p1
elif p2:
    current.next = p2
merged_head = dummy.next
vals = []
while merged_head:
    vals.append(merged_head.val)
    merged_head = merged_head.next
print(vals)  
